name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Read deployment target and Docker image
      id: read-config
      run: |
        echo "TARGET=$(jq -r '.target' deploy-config.json)" >> $GITHUB_ENV
        echo "DOCKER_IMAGE=$(jq -r '.dockerImage' deploy-config.json)" >> $GITHUB_ENV

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Deploy to AWS Lambda
      if: env.TARGET == 'aws-lambda'
      run: npx serverless deploy
      working-directory: serverless/aws-lambda

    - name: Deploy to AWS EKS
      if: env.TARGET == 'aws-eks'
      steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }} .
          docker push ${{ env.DOCKER_IMAGE }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Update kubeconfig
        run: eksctl utils write-kubeconfig --cluster=generic-cluster --region=us-east-1

      - name: Deploy to EKS
        run: |
          sed -i "s|YOUR_DOCKER_IMAGE|${{ env.DOCKER_IMAGE }}|g" k8s-deployment.yml
          kubectl apply -f k8s-deployment.yml
